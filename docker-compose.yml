version: '3.7'
services:
  postgres:
    image: postgres:14.6
    restart: always
    hostname: postgres-srv
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_DB=postgres
    logging:
      options:
        max-size: 10m
        max-file: "3"
    ports:
      - '5438:5432'
    networks:
      - chariot
#  gateway:
#    build:
#      context: .
#      dockerfile: ./gateway/Dockerfile
#    environment:
#      - GATEWAY_PORT=8080
#      - ENVIRONMENT=local
#      - API_SERVICE_ADDR=api:9093
#    container_name: gateway-api
#    hostname: gateway-api
#    ports:
#      - "8080:8080"
#    depends_on:
#      - postgres
#    restart: unless-stopped
#    networks:
#      - chariot
#  api:
#    build:
#      context: .
#      dockerfile: ./api/Dockerfile
#    environment:
#      - CONN_STRING=postgresql://postgres:postgres@postgres:5432/?sslmode=disable
#      - DB_USER
#      - DB_PORT
#      - DB_HOST
#      - DB_REGION
#      - DB_NAME
#      - PORT=9093
#      - MODE=local
#    container_name: api
#    hostname: api
#    ports:
#      - "9093:9093"
#    depends_on:
#      - postgres
#    restart: unless-stopped
#    networks:
#      - chariot
volumes:
  pgdata:
networks:
  chariot:
    name: chariot


# curl -X POST http://localhost:8080/create_user -H "Content-Type: application/json" -d '{
#     "name": "John Doe",
#     "email": "john.doe@example.com",
#     "password": "securepassword123"
# }'
